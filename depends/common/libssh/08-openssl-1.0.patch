--- a/src/libcrypto-compat.c
+++ b/src/libcrypto-compat.c
@@ -319,7 +319,7 @@
     return 1;
 }
 
-#ifndef HAVE_OPENSSL_EVP_CIPHER_CTX_NEW
+#if !defined(OPENSSL_VERSION_NUMBER) || OPENSSL_VERSION_NUMBER < 0x009080bfL
 EVP_CIPHER_CTX *EVP_CIPHER_CTX_new(void)
 {
     return OPENSSL_zalloc(sizeof(EVP_CIPHER_CTX));
--- a/src/libcrypto.c
+++ b/src/libcrypto.c
@@ -630,11 +630,11 @@
    * Same for num, which is being used to store the current offset in blocksize in CTR
    * function.
    */
-#ifdef HAVE_OPENSSL_CRYPTO_CTR128_ENCRYPT
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
   CRYPTO_ctr128_encrypt(in, out, len, &cipher->aes_key->key, cipher->aes_key->IV, tmp_buffer, &num, (block128_f)AES_encrypt);
 #else
   AES_ctr128_encrypt(in, out, len, &cipher->aes_key->key, cipher->aes_key->IV, tmp_buffer, &num);
-#endif /* HAVE_OPENSSL_CRYPTO_CTR128_ENCRYPT */
+#endif /* OPENSSL_VERSION_NUMBER >= 0x10100000L */
 }
 
 static void aes_ctr_cleanup(struct ssh_cipher_struct *cipher){
